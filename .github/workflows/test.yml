---
name: go test
'on':
- push
- pull_request
jobs:
  test:
    strategy:
      matrix:
        go-version:
        - 1.13
        - 1.14
        - 1.15
        - 1.16
        - 1.17
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
    runs-on: "${{ matrix.os }}"
    env:
      GOPROXY: direct
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: "${{ matrix.go-version }}"
    - name: Checkout code
      uses: actions/checkout@v2
    - id: go-env
      run: |
        echo "::set-output name=cache::$(go env GOCACHE)"
        echo "::set-output name=mod-cache::$(go env GOMODCACHE)"
    - name: Cache go modules
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.go-env.outputs.cache }}
          ${{ steps.go-env.outputs.mod-cache }}
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: ${{ runner.os }}-go-
    - name: Test
      run: go test -v -coverprofile='coverage.out' -covermode=atomic ./...
    - name: Upload Code Coverage
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: true
        files: coverage.out
        flags: ${{ runner.os }},go-${{ matrix.go-version }}
        token: ${{ secrets.CODECOV_TOKEN }}
